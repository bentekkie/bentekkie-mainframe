#!/usr/bin/env node


'use strict';

var onezip = require('..');
var path = require('path');
var glob = require('glob');
var argv = process.argv;

var args = require('yargs-parser')(argv.slice(2), {
    string: ['pack', 'extract'],
    alias: {
        v: 'version',
        h: 'help',
        p: 'pack',
        x: 'extract'
    }
});

validate(args);

if (args.version) version();else if (args.help) help();else if (args.pack) getName(args.pack, function (name) {
    main('pack', name);
});else if (args.extract) getName(args.extract, function (name) {
    main('extract', name);
});else help();

function main(operation, file) {
    var cwd = process.cwd();
    var to = void 0,
        packer = void 0;

    switch (operation) {
        case 'pack':
            to = path.join(cwd, file + '.zip');
            packer = onezip.pack(cwd, to, [file]);

            break;

        case 'extract':
            to = cwd;
            packer = onezip.extract(file, to);
            break;
    }

    packer.on('error', function (error) {
        console.error(error.message);
    });

    packer.on('progress', function (percent) {
        process.stdout.write('\r' + percent + '%');
    });

    packer.on('end', function () {
        process.stdout.write('\n');
    });
}

function getName(str, fn) {
    glob(str, function (error, files) {
        if (error) console.error(error.message);else if (!files.length) console.error('file not found');else fn(files[0]);
    });
}

function version() {
    console.log('v' + info().version);
}

function info() {
    return require('../package');
}

function help() {
    var bin = require('../help');
    var usage = 'Usage: ' + info().name + ' [path]';

    console.log(usage);
    console.log('Options:');

    Object.keys(bin).forEach(function (name) {
        console.log('  ' + name + ' ' + bin[name]);
    });
}

function validate(args) {
    var cmdReg = /^(_|v(ersion)?|h(elp)?|p(ack)?|x|extract)$/;

    Object.keys(args).forEach(function (cmd) {
        if (!cmdReg.test(cmd)) {
            var name = info().name;
            console.error('\'' + cmd + '\' is not a ' + name + ' option. See \'' + name + ' --help\'.');
            process.exit(-1);
        }
    });
}