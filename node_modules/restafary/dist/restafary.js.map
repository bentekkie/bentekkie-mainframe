{"version":3,"sources":["node_modules/browser-pack/_prelude.js","client/restafary.js"],"names":["sendRequest","_ref","url","data","method","callback","ajax","escape","str","encodeURI","replace","params","request","XMLHttpRequest","Error","load","status","responseText","open","addEventListener","send","FS","isFunc","a","module","exports","prefix","delete","patch","write","read"],"mappings":"AAAA;ACAA,YA2DA,SAASA,aAATC,GAAoD,GAA9BC,GAA8BD,EAA9BC,IAAKC,EAAyBF,EAAzBE,KAAMC,EAAmBH,EAAnBG,OAAQC,EAAWJ,EAAXI,QACrCC,OACIF,OAAAA,EACAD,KAAAA,EACAD,IAAKK,OAAOL,IACbG,GAOP,QAASE,QAAOC,GACZ,MAAOC,WAAUD,GACZE,QAAQ,IAAK,OAGtB,QAASJ,MAAKK,EAAQN,GAAU,GACrBH,GAAqBS,EAArBT,IAAKC,EAAgBQ,EAAhBR,KAAMC,EAAUO,EAAVP,OACZQ,EAAU,GAAIC,eAEpB,IAAwB,kBAAbR,GACP,KAAMS,OAAM,+BAEhB,IAAMC,GAAO,WACT,MAAIH,GAAQI,QAAU,KAAOJ,EAAQI,OAAS,IACnCX,EAAS,KAAMO,EAAQK,kBAElCZ,GAASS,MAAMF,EAAQK,eAG3BL,GAAQM,KAAKd,EAAQF,GAAK,GAC1BU,EAAQO,iBAAiB,QAASd,GAClCO,EAAQO,iBAAiB,OAAQJ,GAEjCH,EAAQQ,KAAKjB,GA5FjB,GAAIkB,IAAK,aACHC,OAAS,SAACC,GAAD,MAAoB,kBAANA,GAE7BC,QAAOC,QAAQC,OAAS,SAACA,GACrBL,GAAKK,GAGTF,OAAOC,QAAQE,OAAS,SAACzB,EAAKC,EAAME,IAC3BA,GAAYiB,OAAOnB,KACpBE,EAAcF,EACdA,EAAc,MAGlBH,aACII,OAAc,SACdF,IAAcmB,GAAKnB,EACnBC,KAAAA,EACAE,SAAAA,KAIRmB,OAAOC,QAAQG,MAAQ,SAAC1B,EAAKC,EAAME,IAC1BA,GAAYiB,OAAOnB,KACpBE,EAAcF,EACdA,EAAc,MAGlBH,aACII,OAAc,QACdF,IAAcmB,GAAKnB,EACnBC,KAAcA,EACdE,SAAcA,KAItBmB,OAAOC,QAAQI,MAAQ,SAAC3B,EAAKC,EAAME,IAC1BA,GAAYiB,OAAOnB,KACpBE,EAAcF,EACdA,EAAc,MAGlBH,aACII,OAAc,MACdF,IAAcmB,GAAKnB,EACnBC,KAAcA,EACdE,SAAcA,KAItBmB,OAAOC,QAAQK,KAAO,SAAC5B,EAAKG,GACxBL,aACII,OAAc,MACdF,IAAcmB,GAAKnB,EACnBG,SAAcA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nlet FS = '/api/v1/fs';\nconst isFunc = (a) => typeof a === 'function';\n\nmodule.exports.prefix = (prefix) => {\n    FS = prefix;\n};\n\nmodule.exports.delete = (url, data, callback) => {\n    if (!callback && isFunc(data)) {\n        callback    = data;\n        data        = null;\n    }\n    \n    sendRequest({\n        method      : 'DELETE',\n        url         : FS + url,\n        data,\n        callback,\n    });\n};\n\nmodule.exports.patch = (url, data, callback) => {\n    if (!callback && isFunc(data)) {\n        callback    = data;\n        data        = null;\n    }\n    \n    sendRequest({\n        method      : 'PATCH',\n        url         : FS + url,\n        data        : data,\n        callback    : callback\n    });\n};\n\nmodule.exports.write = (url, data, callback) => {\n    if (!callback && isFunc(data)) {\n        callback    = data;\n        data        = null;\n    }\n    \n    sendRequest({\n        method      : 'PUT',\n        url         : FS + url,\n        data        : data,\n        callback    : callback\n    });\n};\n\nmodule.exports.read = (url, callback) => {\n    sendRequest({\n        method      : 'GET',\n        url         : FS + url,\n        callback    : callback\n    });\n};\n\nfunction sendRequest({url, data, method, callback}) {\n    ajax({\n        method,\n        data,\n        url: escape(url),\n    }, callback);\n}\n\n/*\n * when we send ajax request -\n * no need in hash so we escape #\n */\nfunction escape(str) {\n    return encodeURI(str)\n        .replace('#', '%23');\n}\n\nfunction ajax(params, callback) {\n    const {url, data, method} = params;\n    const request = new XMLHttpRequest();\n    \n    if (typeof callback !== 'function')\n        throw Error('Callback should be function!');\n    \n    const load = () => {\n        if (request.status >= 200 && request.status < 400)\n            return callback(null, request.responseText);\n        \n        callback(Error(request.responseText));\n    };\n    \n    request.open(method, url, true);\n    request.addEventListener('error', callback);\n    request.addEventListener('load', load);\n    \n    request.send(data);\n}\n\n"]}